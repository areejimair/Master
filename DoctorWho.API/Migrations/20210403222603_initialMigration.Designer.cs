// <auto-generated />
using System;
using DoctorWho.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DoctorWho.API.Migrations
{
    [DbContext(typeof(DoctorWhoCoreDbContext))]
    [Migration("20210403222603_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DoctorWho.DB.Models.TblAuthor", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.ToTable("TblAuthors");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            AuthorName = "Author1"
                        },
                        new
                        {
                            AuthorId = 2,
                            AuthorName = "Author2"
                        },
                        new
                        {
                            AuthorId = 3,
                            AuthorName = "Author3"
                        },
                        new
                        {
                            AuthorId = 4,
                            AuthorName = "Author4"
                        },
                        new
                        {
                            AuthorId = 5,
                            AuthorName = "Author5"
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblCompanion", b =>
                {
                    b.Property<int>("CompanionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WhoPlayed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanionId");

                    b.ToTable("TblCompanions");

                    b.HasData(
                        new
                        {
                            CompanionId = 1,
                            CompanionName = "Name1",
                            WhoPlayed = "palyer1"
                        },
                        new
                        {
                            CompanionId = 2,
                            CompanionName = "Name2",
                            WhoPlayed = "palyer2"
                        },
                        new
                        {
                            CompanionId = 3,
                            CompanionName = "Name3",
                            WhoPlayed = "palyer3"
                        },
                        new
                        {
                            CompanionId = 4,
                            CompanionName = "Name4",
                            WhoPlayed = "palyer4"
                        },
                        new
                        {
                            CompanionId = 5,
                            CompanionName = "Name5",
                            WhoPlayed = "palyer5"
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblDoctor", b =>
                {
                    b.Property<int>("DoctorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DoctorNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FirstEpisodeDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastEpisodeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DoctorId");

                    b.ToTable("TblDoctors");

                    b.HasData(
                        new
                        {
                            DoctorId = 1,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "doctor1",
                            DoctorNumber = 1,
                            FirstEpisodeDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2010, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 2,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "doctor2",
                            DoctorNumber = 2,
                            FirstEpisodeDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2010, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 3,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "doctor3",
                            DoctorNumber = 3,
                            FirstEpisodeDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2010, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 4,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "doctor4",
                            DoctorNumber = 4,
                            FirstEpisodeDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2010, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            DoctorId = 5,
                            BirthDate = new DateTime(1990, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DoctorName = "doctor5",
                            DoctorNumber = 5,
                            FirstEpisodeDate = new DateTime(2000, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastEpisodeDate = new DateTime(2010, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEnemy", b =>
                {
                    b.Property<int>("EnemyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnemyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EnemyId");

                    b.ToTable("TblEnemies");

                    b.HasData(
                        new
                        {
                            EnemyId = 1,
                            Description = "Des1",
                            EnemyName = "Name1"
                        },
                        new
                        {
                            EnemyId = 2,
                            Description = "Des2",
                            EnemyName = "Name2"
                        },
                        new
                        {
                            EnemyId = 3,
                            Description = "Des3",
                            EnemyName = "Name3"
                        },
                        new
                        {
                            EnemyId = 4,
                            Description = "Des4",
                            EnemyName = "Name4"
                        },
                        new
                        {
                            EnemyId = 5,
                            Description = "Des5",
                            EnemyName = "Name5"
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int?>("DoctorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EpisodeDatedate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EpisodeNumber")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SeriesNumber")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EpisodeId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("DoctorId");

                    b.ToTable("TblEpisodes");

                    b.HasData(
                        new
                        {
                            EpisodeId = 1,
                            AuthorId = 1,
                            DoctorId = 1,
                            EpisodeDatedate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "comedey",
                            Notes = "Funny",
                            SeriesNumber = 2,
                            Title = "Brooklyn99"
                        },
                        new
                        {
                            EpisodeId = 2,
                            AuthorId = 2,
                            DoctorId = 2,
                            EpisodeDatedate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "comedey",
                            Notes = "Funny",
                            SeriesNumber = 2,
                            Title = "Brooklyn99"
                        },
                        new
                        {
                            EpisodeId = 3,
                            AuthorId = 3,
                            DoctorId = 3,
                            EpisodeDatedate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "comedey",
                            Notes = "Funny",
                            SeriesNumber = 2,
                            Title = "Brooklyn99"
                        },
                        new
                        {
                            EpisodeId = 4,
                            AuthorId = 4,
                            DoctorId = 4,
                            EpisodeDatedate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "comedey",
                            Notes = "Funny",
                            SeriesNumber = 2,
                            Title = "Brooklyn99"
                        },
                        new
                        {
                            EpisodeId = 5,
                            AuthorId = 5,
                            DoctorId = 5,
                            EpisodeDatedate = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            EpisodeNumber = 5,
                            EpisodeType = "comedey",
                            Notes = "Funny",
                            SeriesNumber = 2,
                            Title = "Brooklyn99"
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisodeCompanion", b =>
                {
                    b.Property<int>("EpisodeCompanionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanionId")
                        .HasColumnType("int");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeCompanionId");

                    b.HasIndex("CompanionId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("TblEpisodeCompanions");

                    b.HasData(
                        new
                        {
                            EpisodeCompanionId = 1,
                            CompanionId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            EpisodeCompanionId = 2,
                            CompanionId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            EpisodeCompanionId = 3,
                            CompanionId = 3,
                            EpisodeId = 3
                        },
                        new
                        {
                            EpisodeCompanionId = 4,
                            CompanionId = 4,
                            EpisodeId = 4
                        },
                        new
                        {
                            EpisodeCompanionId = 5,
                            CompanionId = 5,
                            EpisodeId = 5
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisodeEnemy", b =>
                {
                    b.Property<int>("EpisodeEnemyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EnemyId")
                        .HasColumnType("int");

                    b.Property<int?>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("EpisodeEnemyId");

                    b.HasIndex("EnemyId");

                    b.HasIndex("EpisodeId");

                    b.ToTable("TblEpisodeEnemies");

                    b.HasData(
                        new
                        {
                            EpisodeEnemyId = 1,
                            EnemyId = 1,
                            EpisodeId = 1
                        },
                        new
                        {
                            EpisodeEnemyId = 2,
                            EnemyId = 2,
                            EpisodeId = 2
                        },
                        new
                        {
                            EpisodeEnemyId = 3,
                            EnemyId = 3,
                            EpisodeId = 3
                        },
                        new
                        {
                            EpisodeEnemyId = 4,
                            EnemyId = 4,
                            EpisodeId = 4
                        },
                        new
                        {
                            EpisodeEnemyId = 5,
                            EnemyId = 5,
                            EpisodeId = 5
                        });
                });

            modelBuilder.Entity("DoctorWho.DB.Models.viewEpisodes", b =>
                {
                    b.Property<string>("AuthorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Companions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoctorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Enemies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EpisodeNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SeriesNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.ToView("ViewEpisodes");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisode", b =>
                {
                    b.HasOne("DoctorWho.DB.Models.TblAuthor", "Author")
                        .WithMany("TblEpisodes")
                        .HasForeignKey("AuthorId");

                    b.HasOne("DoctorWho.DB.Models.TblDoctor", "Doctor")
                        .WithMany("TblEpisodes")
                        .HasForeignKey("DoctorId");

                    b.Navigation("Author");

                    b.Navigation("Doctor");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisodeCompanion", b =>
                {
                    b.HasOne("DoctorWho.DB.Models.TblCompanion", "Companion")
                        .WithMany("TblEpisodeCompanions")
                        .HasForeignKey("CompanionId");

                    b.HasOne("DoctorWho.DB.Models.TblEpisode", "Episode")
                        .WithMany("TblEpisodeCompanions")
                        .HasForeignKey("EpisodeId");

                    b.Navigation("Companion");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisodeEnemy", b =>
                {
                    b.HasOne("DoctorWho.DB.Models.TblEnemy", "Enemy")
                        .WithMany("TblEpisodeEnemies")
                        .HasForeignKey("EnemyId");

                    b.HasOne("DoctorWho.DB.Models.TblEpisode", "Episode")
                        .WithMany("TblEpisodeEnemies")
                        .HasForeignKey("EpisodeId");

                    b.Navigation("Enemy");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblAuthor", b =>
                {
                    b.Navigation("TblEpisodes");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblCompanion", b =>
                {
                    b.Navigation("TblEpisodeCompanions");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblDoctor", b =>
                {
                    b.Navigation("TblEpisodes");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEnemy", b =>
                {
                    b.Navigation("TblEpisodeEnemies");
                });

            modelBuilder.Entity("DoctorWho.DB.Models.TblEpisode", b =>
                {
                    b.Navigation("TblEpisodeCompanions");

                    b.Navigation("TblEpisodeEnemies");
                });
#pragma warning restore 612, 618
        }
    }
}
